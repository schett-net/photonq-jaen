{"version":3,"file":"component---src-jaen-templates-how-to-guide-tsx-034230e0730c73f16257.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/components/GuideFilter/GuideFilter.tsx","webpack://my-gatsby-site/./src/components/Section/SectionHeader.tsx","webpack://my-gatsby-site/./src/components/Layout/PortableTextContainer.tsx","webpack://my-gatsby-site/./src/components/GuideHeader/GuideHeader.tsx","webpack://my-gatsby-site/./src/jaen-templates/HowToGuide.tsx"],"sourcesContent":["import React from \"react\";\nimport { Button } from \"@mui/material\";\n\nexport enum GuideCategory {\n  All = \"All\",\n  Beginner = \"Beginner\",\n  Advanced = \"Advanced\",\n}\n\nexport interface GuideFilterProps {\n  currentCategory: GuideCategory;\n  setCurrentCategory: React.Dispatch<React.SetStateAction<GuideCategory>>;\n}\n\nexport default function GuideFilter({\n  currentCategory,\n  setCurrentCategory,\n}: GuideFilterProps) {\n  return (\n    <div className={\"flex flex-col items-center\"}>\n      <div className={\"flex w-full md:w-auto justify-between md:space-x-10\"}>\n        {Object.values(GuideCategory).map((category, index) => (\n          <div\n            key={index}\n            className={\"w-filter-button-sm md:w-filter-button text-sm\"}\n          >\n            <Button\n              size={\"small\"}\n              onClick={() => setCurrentCategory(category)}\n              variant={currentCategory === category ? \"contained\" : \"text\"}\n            >\n              {category}\n            </Button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx'\nimport React from 'react'\n\ninterface SectionHeaderProps {\n  text: JSX.Element\n  centered?: boolean\n}\n\nexport default function SectionHeader({text, centered}: SectionHeaderProps) {\n  return (\n    <h1\n      className={clsx('text-3xl lg:text-5xl font-bold', {\n        ['text-center']: centered\n      })}>\n      {text}\n    </h1>\n  )\n}\n","import React, { ReactNode } from \"react\";\n\ninterface PortableTextContainerProps {\n  children: ReactNode;\n}\n\nexport default function PortableTextContainer({\n  children,\n}: PortableTextContainerProps) {\n  return (\n    <div className={\"flex flex-col items-center w-full\"}>\n      <div className={\"md:w-8/12 lg:w-6/12\"}>{children}</div>\n    </div>\n  );\n}\n","import React from 'react'\nimport PortableTextContainer from '../Layout/PortableTextContainer'\nimport SectionHeader from '../Section/SectionHeader'\n\ninterface GuideHeaderProps {\n  title: JSX.Element\n  subtitle: JSX.Element\n  category: JSX.Element\n  content_type: JSX.Element\n  mainImage: JSX.Element\n}\n\nexport default function GuideHeader({\n  category,\n  content_type,\n  subtitle,\n  mainImage,\n  title\n}: GuideHeaderProps) {\n  return (\n    <div className={'space-y-8'}>\n      <PortableTextContainer>\n        <div\n          className={\n            'flex flex-col items-center text-center space-y-5 px-8 md:px-16'\n          }>\n          <div className={'text-grey text-lg flex space-x-2 '}>\n            {content_type}\n            <span>â€¢</span>\n            {category}\n          </div>\n          <SectionHeader text={title} />\n          <p>{subtitle}</p>\n        </div>\n      </PortableTextContainer>\n\n      <div className=\"h-80\">{mainImage}</div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport {connectTemplate, Field} from '@jaenjs/jaen'\nimport {graphql, PageProps} from 'gatsby'\nimport {GuideCategory} from '../components/GuideFilter/GuideFilter'\nimport GuideHeader from '../components/GuideHeader/GuideHeader'\nimport {GuideSkeleton} from '../components/GuideSkeleton/BlogPostSkeleton'\nimport MaxWidthContainer from '../components/Layout/MaxWidthContainer'\nimport NavbarPadding from '../components/Layout/NavbarPadding'\nimport PageLayout from '../components/Layout/PageLayout'\nimport PortableTextContainer from '../components/Layout/PortableTextContainer'\nimport Section from '../components/Section/Section'\n\nfunction HowToTemplate(props: PageProps) {\n  const isFallback = false\n\n  if (isFallback) {\n    return (\n      <div className=\"prose\">\n        <NavbarPadding />\n        <Section withVerticalPadding>\n          <PortableTextContainer>\n            <GuideSkeleton />\n          </PortableTextContainer>\n        </Section>\n      </div>\n    )\n  }\n\n  return (\n    <PageLayout pathname={props.path}>\n      <div className={'flex flex-col items-center'}>\n        <NavbarPadding />\n        <Section fullWidth withVerticalPadding>\n          <GuideHeader\n            title={<Field.Text name=\"title\" defaultValue={'title'} />}\n            subtitle={<Field.Text name=\"teaser\" defaultValue={'title'} />}\n            category={\n              <Field.Choice\n                name=\"category\"\n                defaultValue={GuideCategory.All}\n                options={[\n                  GuideCategory.Beginner,\n                  GuideCategory.Advanced,\n                  GuideCategory.All\n                ]}\n                render={(selectedOption, options) => (\n                  <span>{selectedOption}</span>\n                )}\n                renderPopover={(selectedOption, options, select) => (\n                  <ul>\n                    {options.map(option => (\n                      <li key={option} onClick={() => select(option)}>\n                        {option}\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              />\n            }\n            content_type={\n              <Field.Text name=\"contentType\" defaultValue={'title'} />\n            }\n            mainImage={\n              <Field.Image\n                name=\"mainImage\"\n                objectFit=\"cover\"\n                defaultValue={'https://photonq.at/images/photons.svg'}\n                alt=\"Divider Image\"\n              />\n            }\n          />\n        </Section>\n        <MaxWidthContainer>\n          <PortableTextContainer>\n            <div className={'pb-16 lg:pb-28 2xl:pb-32 prose'}>\n              <Field.Text\n                name=\"body\"\n                rtf\n                defaultValue={`\nWhat is Lorem Ipsum?\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n\nWhy do we use it?\nIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\n`}\n              />\n            </div>\n          </PortableTextContainer>\n        </MaxWidthContainer>\n      </div>\n    </PageLayout>\n  )\n}\n\nexport const query = graphql`\n  query ($jaenPageId: String!) {\n    ...JaenPageQuery\n  }\n`\n\nexport default connectTemplate(HowToTemplate, {\n  displayName: 'HowToTemplate',\n  children: []\n})\n"],"names":["GuideCategory","GuideFilter","currentCategory","setCurrentCategory","_jsx","className","Object","values","map","category","index","Button","size","onClick","variant","SectionHeader","text","centered","clsx","PortableTextContainer","children","GuideHeader","content_type","subtitle","mainImage","title","_jsxs","connectTemplate","props","PageLayout","pathname","path","NavbarPadding","Section","fullWidth","withVerticalPadding","Field","name","defaultValue","options","render","selectedOption","renderPopover","select","option","objectFit","alt","MaxWidthContainer","rtf","displayName"],"sourceRoot":""}