{"version":3,"file":"component---src-jaen-templates-how-to-guides-tsx-cb55c9d204ab0be14f1d.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/components/DocumentationPreview/GuidePreview.tsx","webpack://my-gatsby-site/./src/components/DocumentationPreview/GuidePreviewGrid.tsx","webpack://my-gatsby-site/./src/components/GuideFilter/hook.guideFilter.tsx","webpack://my-gatsby-site/./src/jaen-templates/HowToGuides.tsx","webpack://my-gatsby-site/./src/pages/how-to-guides.tsx"],"sourcesContent":["import {Field, navigate, useField} from '@jaenjs/jaen'\nimport {useLocation} from '@reach/router'\nimport React from 'react'\nimport {getLangRootNavigationPath} from '../../common/getLangRootNavigationPath'\n\nfunction GuidePreview(props: {index: string; slug: string}) {\n  const mainImage = useField('mainImage', 'IMA:ImageField')\n\n  const divProps: React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > = {\n    className:\n      'relative rounded filter drop-shadow-2xl transform hover:scale-105 duration-300 cursor-pointer w-full h-96'\n  }\n\n  const location = typeof window !== 'undefined' ? useLocation() : null\n\n  if (!mainImage.isEditing) {\n    divProps.role = 'link'\n    divProps.onClick = () => {\n      navigate(\n        getLangRootNavigationPath(\n          location?.pathname,\n          `/${props.index}/${props.slug}`\n        )\n      )\n    }\n  }\n\n  return (\n    <div {...divProps}>\n      <Field.Image\n        name=\"mainImage\"\n        objectFit=\"cover\"\n        className=\"rounded\"\n        alt=\"Content Image\"\n        defaultValue={undefined}\n      />\n\n      {!mainImage.isEditing && (\n        <div\n          style={{backgroundColor: '#263238'}}\n          className={'absolute inset-0 z-10 opacity-40'}\n        />\n      )}\n\n      <div className={'absolute top-4 right-0 bg-primary-light z-20 px-1'}>\n        <Field.Text\n          name=\"contentType\"\n          defaultValue={'foo'}\n          className=\"text-primary\"\n        />\n      </div>\n      <div\n        className={\n          'absolute bottom-0 text-white mx-5 mb-5 z-20 backdrop-filter backdrop-blur-lg rounded p-1'\n        }>\n        <h4>\n          <Field.Text\n            name=\"title\"\n            rtf\n            defaultValue={'foo'}\n            className=\"text-lg font-bold\"\n          />\n        </h4>\n\n        <Field.Text\n          name=\"teaser\"\n          defaultValue={'foo'}\n          className=\"leading-normal\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default GuidePreview\n","import React from 'react'\n\nexport const GuidePreviewGrid = (props: {children: React.ReactNode}) => {\n  return (\n    <div\n      className={'grid md:grid-cols-3 gap-10 w-full space-y-10 md:space-y-0'}>\n      {props.children}\n    </div>\n  )\n}\n","import {useJaenPageIndex} from '@jaenjs/jaen'\nimport {useEffect, useMemo, useState} from 'react'\n\nimport {GuideCategory} from './GuideFilter'\n\nexport function useGuideFilter(props: {jaenPageId?: string; path?: string}) {\n  const {children: guides, withJaenPage} = useJaenPageIndex({\n    jaenPageId: props.jaenPageId,\n    path: props.path,\n    filter: page => {\n      console.log('page', page)\n      return true\n    }\n  })\n\n  console.log(`guides`, guides)\n\n  const [isFirstFetch, setIsFirstFetch] = useState(true)\n  const [isLoading, setIsLoading] = useState(false)\n  const [filteredGuides, setFilteredGuides] = useState(guides)\n  const [currentCategory, setCurrentCategory] = useState<GuideCategory>(\n    GuideCategory.All\n  )\n\n  const fetchGuidesByCategory = async () => {\n    setIsLoading(true)\n\n    const filteredGuides =\n      currentCategory === GuideCategory.All\n        ? guides\n        : guides.filter(guide => {\n            const fieldValue: string =\n              guide.jaenFields?.['IMA:ChoiceField']?.['category'].value\n\n            console.log('Field value', fieldValue, currentCategory)\n\n            return fieldValue === currentCategory\n          })\n\n    setFilteredGuides(filteredGuides)\n    setIsLoading(() => false)\n  }\n\n  useEffect(() => {\n    if (!isFirstFetch) {\n      fetchGuidesByCategory()\n    } else {\n      setIsFirstFetch(false)\n    }\n  }, [currentCategory])\n\n  const sortedGuides = useMemo(\n    () =>\n      filteredGuides.sort((a, b) => {\n        const dateA = new Date(\n          a.jaenPageMetadata?.datePublished ?? ''\n        ).getTime()\n        const dateB = new Date(\n          b.jaenPageMetadata?.datePublished ?? ''\n        ).getTime()\n\n        return dateB - dateA\n      }),\n    [filteredGuides]\n  )\n\n  return {\n    currentCategory,\n    setCurrentCategory,\n    filteredGuides: sortedGuides,\n    setFilteredGuides,\n    isLoading,\n    withJaenPage\n  }\n}\n","import {connectTemplate} from '@jaenjs/jaen'\nimport {graphql} from 'gatsby'\n\nimport {HowToGuidesPage} from '../pages/how-to-guides'\n\nexport const query = graphql`\n  query ($jaenPageId: String!) {\n    jaenPage(id: {eq: $jaenPageId}) {\n      ...JaenPageData\n      children {\n        ...JaenPageData\n      }\n    }\n  }\n`\n\nexport default connectTemplate(HowToGuidesPage, {\n  displayName: 'HowToGuides',\n  children: ['HowToGuide']\n})\n","import {connectPage, Field} from '@jaenjs/jaen'\nimport {graphql, PageProps} from 'gatsby'\nimport React from 'react'\nimport GuidePreview from '../components/DocumentationPreview/GuidePreview'\nimport {GuidePreviewGrid} from '../components/DocumentationPreview/GuidePreviewGrid'\nimport GuideFilter from '../components/GuideFilter/GuideFilter'\nimport {useGuideFilter} from '../components/GuideFilter/hook.guideFilter'\nimport MaxWidthContainer from '../components/Layout/MaxWidthContainer'\nimport NavbarPadding from '../components/Layout/NavbarPadding'\nimport PageLayout from '../components/Layout/PageLayout'\nimport Section from '../components/Section/Section'\nimport SectionHeader from '../components/Section/SectionHeader'\n\nexport function HowToGuidesPage(props: PageProps) {\n  const {\n    currentCategory,\n    setCurrentCategory,\n    filteredGuides,\n    isLoading,\n    withJaenPage\n  } = useGuideFilter({})\n\n  return (\n    <PageLayout pathname={props.path}>\n      <div className={'flex flex-col items-center'}>\n        <MaxWidthContainer className={'space-y-12'}>\n          <NavbarPadding />\n          <Section>\n            <div className={'flex flex-col items-center space-y-5'}>\n              <SectionHeader\n                text={\n                  <Field.Text\n                    name=\"how-to-guide-header\"\n                    defaultValue={'Documentation and How-To-Guides'}\n                  />\n                }\n              />\n              <p className={'md:w-8/12 md:text-center'}>\n                <Field.Text\n                  name=\"how-to-guide-text\"\n                  defaultValue={`\nEach of these guides and documentation contains advice and\nresearch to give you guidelines for your successful quantum\ncomputing experiment.`}\n                />\n              </p>\n            </div>\n          </Section>\n          <GuideFilter\n            currentCategory={currentCategory}\n            setCurrentCategory={setCurrentCategory}\n          />\n          <Section>\n            {isLoading ? (\n              <div className={'flex justify-center'}>\n                <span className=\"h-10 w-10 animate-ping inline-flex rounded-full bg-primary opacity-75\" />\n                <p>Loading...</p>\n              </div>\n            ) : (\n              <div className={'pb-8'}>\n                <GuidePreviewGrid>\n                  {filteredGuides.map(child =>\n                    withJaenPage(\n                      child.id,\n                      <GuidePreview\n                        key={child.id}\n                        index=\"how-to-guides\"\n                        slug={child.slug!}\n                      />\n                    )\n                  )}\n                </GuidePreviewGrid>\n              </div>\n            )}\n          </Section>\n        </MaxWidthContainer>\n      </div>\n    </PageLayout>\n  )\n}\n\nexport const query = graphql`\n  query ($jaenPageId: String!) {\n    jaenPage(id: {eq: $jaenPageId}) {\n      ...JaenPageData\n      children {\n        ...JaenPageData\n      }\n    }\n  }\n`\n\nexport default connectPage(HowToGuidesPage, {\n  displayName: 'HowToGuidesPage',\n  children: ['HowToGuide']\n})\n"],"names":["props","mainImage","useField","divProps","className","location","window","useLocation","isEditing","role","onClick","navigate","getLangRootNavigationPath","pathname","index","slug","_jsxs","_jsx","Field","name","objectFit","alt","defaultValue","undefined","style","backgroundColor","rtf","GuidePreviewGrid","children","useGuideFilter","useJaenPageIndex","jaenPageId","path","filter","page","console","log","guides","withJaenPage","useState","isFirstFetch","setIsFirstFetch","isLoading","setIsLoading","filteredGuides","setFilteredGuides","GuideCategory","currentCategory","setCurrentCategory","fetchGuidesByCategory","guide","fieldValue","jaenFields","_guide$jaenFields","_guide$jaenFields$IMA","value","useEffect","sortedGuides","useMemo","sort","a","b","dateA","Date","jaenPageMetadata","_a$jaenPageMetadata","datePublished","getTime","_b$jaenPageMetadata","connectTemplate","HowToGuidesPage","displayName","PageLayout","MaxWidthContainer","NavbarPadding","Section","SectionHeader","text","GuideFilter","map","child","id","GuidePreview","connectPage"],"sourceRoot":""}