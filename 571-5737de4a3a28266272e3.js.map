{"version":3,"file":"571-5737de4a3a28266272e3.js","mappings":"oJAmEA,KAAeA,EAAAA,EAAAA,iBAhEf,SAAsBC,GACpB,IAAMC,GAAYC,EAAAA,EAAAA,UAAS,YAAa,kBAElCC,EAGF,CACFC,UACE,6GAUJ,OAPKH,EAAUI,YACbF,EAASG,KAAO,OAChBH,EAASI,QAAU,YACjBC,EAAAA,EAAAA,UAAS,IAAIR,EAAMS,MAAX,IAAoBT,EAAMU,KADpC,IAMAC,EAAAA,EAAAA,IAAAA,MAAAA,OAAAA,OAAAA,CAAAA,EAASR,EAAT,YACES,EAAAA,EAAAA,IAACC,EAAAA,MAAAA,MAAD,CACEC,KAAK,YACLC,UAAU,QACVX,UAAU,UACVY,IAAI,gBACJC,kBAAcC,KAGdjB,EAAUI,YACVO,EAAAA,EAAAA,IAAAA,MAAAA,CACEO,MAAO,CAACC,gBAAiB,WACzBhB,UAAW,sCAIfQ,EAAAA,EAAAA,IAAAA,MAAAA,CAAKR,UAAW,oDAAhB,UACEQ,EAAAA,EAAAA,IAACC,EAAAA,MAAAA,KAAD,CACEC,KAAK,cACLG,aAAc,MACdb,UAAU,oBAGdO,EAAAA,EAAAA,IAAAA,MAAAA,CACEP,UACE,2FAFJ,WAIEQ,EAAAA,EAAAA,IAAAA,KAAAA,CAAAA,UACEA,EAAAA,EAAAA,IAACC,EAAAA,MAAAA,KAAD,CACEC,KAAK,QACLG,aAAc,MACdb,UAAU,yBAIdQ,EAAAA,EAAAA,IAACC,EAAAA,MAAAA,KAAD,CACEC,KAAK,SACLG,aAAc,MACdb,UAAU,yBAOpB,GAA4C,CAC1CU,KAAM,eACNO,YAAa,gB,uECnEFC,EAAmB,SAACtB,GAC/B,OACEY,EAAAA,EAAAA,IAAAA,MAAAA,CACER,UAAW,4DADb,SAEGJ,EAAMuB,UAJN,C,mFCCKC,E,sBAWG,SAASC,EAAT,GAGO,IAFpBC,EAEmB,EAFnBA,gBACAC,EACmB,EADnBA,mBAEA,OACEf,EAAAA,EAAAA,IAAAA,MAAAA,CAAKR,UAAW,6BAAhB,UACEQ,EAAAA,EAAAA,IAAAA,MAAAA,CAAKR,UAAW,sDAAhB,SACGwB,OAAOC,OAAOL,GAAeM,KAAI,SAACC,EAAUtB,GAAX,OAChCG,EAAAA,EAAAA,IAAAA,MAAAA,CAEER,UAAW,gDAFb,UAIEQ,EAAAA,EAAAA,IAACoB,EAAAA,EAAD,CACEC,KAAM,QACN1B,QAAS,kBAAMoB,EAAmBI,EAFpC,EAGEG,QAASR,IAAoBK,EAAW,YAAc,OAHxD,SAKGA,KAREtB,EAFR,OAiBR,EAnCD,SAAYe,GAAAA,EAAAA,IAAAA,MAAAA,EAAAA,SAAAA,WAAAA,EAAAA,SAAAA,UAAAA,CAAZ,CAAYA,IAAAA,EAAAA,CAAAA,G,4HCEL,SAASW,EAAenC,GAC7B,OAAyCoC,EAAAA,EAAAA,kBAAiB,CACxDC,WAAYrC,EAAMqC,aADHC,EAAjB,EAAOf,SAAkBgB,EAAzB,EAAyBA,aAIzB,GAAwCC,EAAAA,EAAAA,WAAS,GAA1CC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAApCG,EAAP,KAAkBC,EAAlB,KACA,GAA4CJ,EAAAA,EAAAA,UAASF,GAA9CO,EAAP,KAAuBC,EAAvB,KACA,GAA8CN,EAAAA,EAAAA,UAC5ChB,EAAAA,EAAAA,KADKE,EAAP,KAAwBC,EAAxB,KAIMoB,EAAqB,mCAAG,oFAC5BH,GAAa,GAEPC,EACJnB,IAAoBF,EAAAA,EAAAA,IAChBc,EACAA,EAAOU,QAAO,SAAAC,GAAU,IAAD,IACfC,EAAkB,UACtBD,EAAME,kBADgB,iBACtBC,EAAmB,0BADG,aACtBC,EAAA,SAAoDC,MAItD,OAFAC,QAAQC,IAAI,cAAeN,EAAYxB,GAEhCwB,IAAexB,CANxB,IASNoB,EAAkBD,GAClBD,GAAa,kBAAM,CAAP,IAhBgB,sCAAH,2DAmB3Ba,EAAAA,EAAAA,YAAU,WACHhB,EAGHC,GAAgB,GAFhBK,GAFK,GAMN,CAACrB,IAEJ,IAAMgC,GAAeC,EAAAA,EAAAA,UACnB,kBACEd,EAAee,MAAK,SAACC,EAAGC,GAAO,IAAD,QACtBC,EAAQ,IAAIC,KAAJ,oBACZH,EAAEI,wBADU,aACZC,EAAoBC,qBADR,QACyB,IACrCC,UAKF,OAJc,IAAIJ,KAAJ,oBACZF,EAAEG,wBADU,aACZI,EAAoBF,qBADR,QACyB,IACrCC,UAEaL,CARjB,GAFwB,GAY1B,CAAClB,IAGH,MAAO,CACLnB,gBAAAA,EACAC,mBAAAA,EACAkB,eAAgBa,EAChBZ,kBAAAA,EACAH,UAAAA,EACAJ,aAAAA,EAEH,C,gFC3Dc,SAAS+B,EAAT,GAA8D,IAAD,EAArCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,SAC3C,OACE5D,EAAAA,EAAAA,IAAAA,KAAAA,CACER,WAAWqE,EAAAA,EAAAA,GAAK,kCAAD,OACZ,eAAgBD,EADJ,IADjB,SAIGD,GAGN,C,yDCND,WAAeG,EAAAA,EAAAA,iBAAgBC,EAAAA,gBAAiB,CAC9CtD,YAAa,cACbE,SAAU,CAAC,e,yMCAN,SAASoD,EAAgB3E,GAC9B,OAMImC,EAAAA,EAAAA,GAAe,CACjBE,WAAY,6BANZX,EADF,EACEA,gBACAC,EAFF,EAEEA,mBACAkB,EAHF,EAGEA,eACAF,EAJF,EAIEA,UACAJ,EALF,EAKEA,aAKF,OACE3B,EAAAA,EAAAA,IAACgE,EAAAA,EAAD,CAAYC,SAAU7E,EAAM8E,KAA5BvD,UACEX,EAAAA,EAAAA,IAAAA,MAAAA,CAAKR,UAAW,6BAAhBmB,UACEZ,EAAAA,EAAAA,IAACoE,EAAAA,EAAD,CAAmB3E,UAAW,aAA9BmB,SAAAA,EACEX,EAAAA,EAAAA,IAACoE,EAAAA,EAAD,KACApE,EAAAA,EAAAA,IAACqE,EAAAA,EAAD,CAAA1D,UACEZ,EAAAA,EAAAA,IAAAA,MAAAA,CAAKP,UAAW,uCAAhBmB,SAAAA,EACEX,EAAAA,EAAAA,IAAC0D,EAAAA,EAAD,CACEC,MACE3D,EAAAA,EAAAA,IAACC,EAAAA,MAAAA,KAAD,CACEC,KAAK,sBACLG,aAAc,uCAIpBL,EAAAA,EAAAA,IAAAA,IAAAA,CAAGR,UAAW,2BAAdmB,UACEX,EAAAA,EAAAA,IAACC,EAAAA,MAAAA,KAAD,CACEC,KAAK,oBACLG,aAAY,6JAQpBL,EAAAA,EAAAA,IAACa,EAAAA,EAAD,CACEC,gBAAiBA,EACjBC,mBAAoBA,KAEtBf,EAAAA,EAAAA,IAACqE,EAAAA,EAAD,CAAA1D,SACGoB,GACChC,EAAAA,EAAAA,IAAAA,MAAAA,CAAKP,UAAW,sBAAhBmB,SAAAA,EACEX,EAAAA,EAAAA,IAAAA,OAAAA,CAAMR,UAAU,2EAChBQ,EAAAA,EAAAA,IAAAA,IAAAA,CAAAW,SAAAA,mBAGFX,EAAAA,EAAAA,IAAAA,MAAAA,CAAKR,UAAW,OAAhBmB,UACEX,EAAAA,EAAAA,IAACU,EAAAA,EAAD,CAAAC,SACGsB,EAAef,KAAI,SAAAoD,GAAK,OACvB3C,EACE2C,EAAMC,IACNvE,EAAAA,EAAAA,IAACwE,EAAAA,EAAD,CAEE3E,MAAM,gBACNC,KAAMwE,EAAMxE,MAFPwE,EAAMC,IAJhB,gBAkBlB,CAQD,WAAeE,EAAAA,EAAAA,aAAYV,EAAiB,CAC1CtD,YAAa,kBACbE,SAAU,CAAC,e","sources":["webpack://my-gatsby-site/./src/components/DocumentationPreview/GuidePreview.tsx","webpack://my-gatsby-site/./src/components/DocumentationPreview/GuidePreviewGrid.tsx","webpack://my-gatsby-site/./src/components/GuideFilter/GuideFilter.tsx","webpack://my-gatsby-site/./src/components/GuideFilter/hook.guideFilter.tsx","webpack://my-gatsby-site/./src/components/Section/SectionHeader.tsx","webpack://my-gatsby-site/./src/jaen-templates/HowToGuides.tsx","webpack://my-gatsby-site/./src/pages/how-to-guides.tsx"],"sourcesContent":["import {connectSection, Field, navigate, useField} from '@jaenjs/jaen'\nimport React from 'react'\n\nfunction GuidePreview(props: {index: string; slug: string}) {\n  const mainImage = useField('mainImage', 'IMA:ImageField')\n\n  const divProps: React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > = {\n    className:\n      'relative rounded filter drop-shadow-2xl transform hover:scale-105 duration-300 cursor-pointer w-full h-96'\n  }\n\n  if (!mainImage.isEditing) {\n    divProps.role = 'link'\n    divProps.onClick = () => {\n      navigate(`/${props.index}/${props.slug}`)\n    }\n  }\n\n  return (\n    <div {...divProps}>\n      <Field.Image\n        name=\"mainImage\"\n        objectFit=\"cover\"\n        className=\"rounded\"\n        alt=\"Content Image\"\n        defaultValue={undefined}\n      />\n\n      {!mainImage.isEditing && (\n        <div\n          style={{backgroundColor: '#263238'}}\n          className={'absolute inset-0 z-10 opacity-40'}\n        />\n      )}\n\n      <div className={'absolute top-4 right-0 bg-primary-light z-20 px-1'}>\n        <Field.Text\n          name=\"contentType\"\n          defaultValue={'foo'}\n          className=\"text-primary\"\n        />\n      </div>\n      <div\n        className={\n          'absolute bottom-0 text-white mx-5 mb-5 z-20 backdrop-filter backdrop-blur-lg rounded p-1'\n        }>\n        <h4>\n          <Field.Text\n            name=\"title\"\n            defaultValue={'foo'}\n            className=\"text-lg font-bold\"\n          />\n        </h4>\n\n        <Field.Text\n          name=\"teaser\"\n          defaultValue={'foo'}\n          className=\"leading-normal\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default connectSection(GuidePreview, {\n  name: 'GuidePreview',\n  displayName: 'GuidePreview'\n})\n","import React from 'react'\n\nexport const GuidePreviewGrid = (props: {children: React.ReactNode}) => {\n  return (\n    <div\n      className={'grid md:grid-cols-3 gap-10 w-full space-y-10 md:space-y-0'}>\n      {props.children}\n    </div>\n  )\n}\n","import React from \"react\";\nimport { Button } from \"@mui/material\";\n\nexport enum GuideCategory {\n  All = \"All\",\n  Beginner = \"Beginner\",\n  Advanced = \"Advanced\",\n}\n\nexport interface GuideFilterProps {\n  currentCategory: GuideCategory;\n  setCurrentCategory: React.Dispatch<React.SetStateAction<GuideCategory>>;\n}\n\nexport default function GuideFilter({\n  currentCategory,\n  setCurrentCategory,\n}: GuideFilterProps) {\n  return (\n    <div className={\"flex flex-col items-center\"}>\n      <div className={\"flex w-full md:w-auto justify-between md:space-x-10\"}>\n        {Object.values(GuideCategory).map((category, index) => (\n          <div\n            key={index}\n            className={\"w-filter-button-sm md:w-filter-button text-sm\"}\n          >\n            <Button\n              size={\"small\"}\n              onClick={() => setCurrentCategory(category)}\n              variant={currentCategory === category ? \"contained\" : \"text\"}\n            >\n              {category}\n            </Button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import {useJaenPageIndex} from '@jaenjs/jaen'\nimport {useEffect, useMemo, useState} from 'react'\n\nimport {GuideCategory} from './GuideFilter'\n\nexport function useGuideFilter(props: {jaenPageId: string}) {\n  const {children: guides, withJaenPage} = useJaenPageIndex({\n    jaenPageId: props.jaenPageId\n  })\n\n  const [isFirstFetch, setIsFirstFetch] = useState(true)\n  const [isLoading, setIsLoading] = useState(false)\n  const [filteredGuides, setFilteredGuides] = useState(guides)\n  const [currentCategory, setCurrentCategory] = useState<GuideCategory>(\n    GuideCategory.All\n  )\n\n  const fetchGuidesByCategory = async () => {\n    setIsLoading(true)\n\n    const filteredGuides =\n      currentCategory === GuideCategory.All\n        ? guides\n        : guides.filter(guide => {\n            const fieldValue: string =\n              guide.jaenFields?.['IMA:ChoiceField']?.['category'].value\n\n            console.log('Field value', fieldValue, currentCategory)\n\n            return fieldValue === currentCategory\n          })\n\n    setFilteredGuides(filteredGuides)\n    setIsLoading(() => false)\n  }\n\n  useEffect(() => {\n    if (!isFirstFetch) {\n      fetchGuidesByCategory()\n    } else {\n      setIsFirstFetch(false)\n    }\n  }, [currentCategory])\n\n  const sortedGuides = useMemo(\n    () =>\n      filteredGuides.sort((a, b) => {\n        const dateA = new Date(\n          a.jaenPageMetadata?.datePublished ?? ''\n        ).getTime()\n        const dateB = new Date(\n          b.jaenPageMetadata?.datePublished ?? ''\n        ).getTime()\n\n        return dateB - dateA\n      }),\n    [filteredGuides]\n  )\n\n  return {\n    currentCategory,\n    setCurrentCategory,\n    filteredGuides: sortedGuides,\n    setFilteredGuides,\n    isLoading,\n    withJaenPage\n  }\n}\n","import clsx from 'clsx'\nimport React from 'react'\n\ninterface SectionHeaderProps {\n  text: JSX.Element\n  centered?: boolean\n}\n\nexport default function SectionHeader({text, centered}: SectionHeaderProps) {\n  return (\n    <h1\n      className={clsx('text-3xl lg:text-5xl font-bold', {\n        ['text-center']: centered\n      })}>\n      {text}\n    </h1>\n  )\n}\n","import {connectTemplate} from '@jaenjs/jaen'\nimport {graphql} from 'gatsby'\n\nimport {HowToGuidesPage} from '../pages/how-to-guides'\n\nexport const query = graphql`\n  query ($jaenPageId: String!) {\n    ...JaenPageQuery\n  }\n`\n\nexport default connectTemplate(HowToGuidesPage, {\n  displayName: 'HowToGuides',\n  children: ['HowToGuide']\n})\n","import { connectPage, Field } from '@jaenjs/jaen'\nimport { graphql, PageProps } from 'gatsby'\nimport React from 'react'\nimport GuidePreview from '../components/DocumentationPreview/GuidePreview'\nimport { GuidePreviewGrid } from '../components/DocumentationPreview/GuidePreviewGrid'\nimport GuideFilter from '../components/GuideFilter/GuideFilter'\nimport { useGuideFilter } from '../components/GuideFilter/hook.guideFilter'\nimport MaxWidthContainer from '../components/Layout/MaxWidthContainer'\nimport NavbarPadding from '../components/Layout/NavbarPadding'\nimport PageLayout from '../components/Layout/PageLayout'\nimport Section from '../components/Section/Section'\nimport SectionHeader from '../components/Section/SectionHeader'\n\nexport function HowToGuidesPage(props: PageProps) {\n  const {\n    currentCategory,\n    setCurrentCategory,\n    filteredGuides,\n    isLoading,\n    withJaenPage\n  } = useGuideFilter({\n    jaenPageId: 'JaenPage /how-to-guides/'\n  })\n\n  return (\n    <PageLayout pathname={props.path}>\n      <div className={'flex flex-col items-center'}>\n        <MaxWidthContainer className={'space-y-12'}>\n          <NavbarPadding />\n          <Section>\n            <div className={'flex flex-col items-center space-y-5'}>\n              <SectionHeader\n                text={\n                  <Field.Text\n                    name=\"how-to-guide-header\"\n                    defaultValue={'Documentation and How-To-Guides'}\n                  />\n                }\n              />\n              <p className={'md:w-8/12 md:text-center'}>\n                <Field.Text\n                  name=\"how-to-guide-text\"\n                  defaultValue={`\nEach of these guides and documentation contains advice and\nresearch to give you guidelines for your successful quantum\ncomputing experiment.`}\n                />\n              </p>\n            </div>\n          </Section>\n          <GuideFilter\n            currentCategory={currentCategory}\n            setCurrentCategory={setCurrentCategory}\n          />\n          <Section>\n            {isLoading ? (\n              <div className={'flex justify-center'}>\n                <span className=\"h-10 w-10 animate-ping inline-flex rounded-full bg-primary opacity-75\" />\n                <p>Loading...</p>\n              </div>\n            ) : (\n              <div className={'pb-8'}>\n                <GuidePreviewGrid>\n                  {filteredGuides.map(child =>\n                    withJaenPage(\n                      child.id,\n                      <GuidePreview\n                        key={child.id}\n                        index=\"how-to-guides\"\n                        slug={child.slug!}\n                      />\n                    )\n                  )}\n                </GuidePreviewGrid>\n              </div>\n            )}\n          </Section>\n        </MaxWidthContainer>\n      </div>\n    </PageLayout>\n  )\n}\n\nexport const query = graphql`\n  query ($jaenPageId: String!) {\n    ...JaenPageQuery\n  }\n`\n\nexport default connectPage(HowToGuidesPage, {\n  displayName: 'HowToGuidesPage',\n  children: ['HowToGuide']\n})\n"],"names":["connectSection","props","mainImage","useField","divProps","className","isEditing","role","onClick","navigate","index","slug","_jsxs","_jsx","Field","name","objectFit","alt","defaultValue","undefined","style","backgroundColor","displayName","GuidePreviewGrid","children","GuideCategory","GuideFilter","currentCategory","setCurrentCategory","Object","values","map","category","Button","size","variant","useGuideFilter","useJaenPageIndex","jaenPageId","guides","withJaenPage","useState","isFirstFetch","setIsFirstFetch","isLoading","setIsLoading","filteredGuides","setFilteredGuides","fetchGuidesByCategory","filter","guide","fieldValue","jaenFields","_guide$jaenFields","_guide$jaenFields$IMA","value","console","log","useEffect","sortedGuides","useMemo","sort","a","b","dateA","Date","jaenPageMetadata","_a$jaenPageMetadata","datePublished","getTime","_b$jaenPageMetadata","SectionHeader","text","centered","clsx","connectTemplate","HowToGuidesPage","PageLayout","pathname","path","MaxWidthContainer","NavbarPadding","Section","child","id","GuidePreview","connectPage"],"sourceRoot":""}