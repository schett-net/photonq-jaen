{"version":3,"file":"component---node-modules-jaenjs-jaen-src-internal-plugins-pages-internal-services-routing-pages-tsx-13bfe4e1945e277b880c.js","mappings":"gSAuFA,GAAeA,EAAAA,EAAAA,KA/EC,SAACC,GAAqD,IAAD,IAC7DC,GAAeC,EAAAA,EAAAA,KACnB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,QAAQJ,YAA3B,IAGP,GAAsB,oBAAXK,OACT,OAAO,mCAGT,IAAMC,EAAI,UAAGP,EAAMQ,gBAAT,iBAAG,EAAgBC,YAAnB,aAAG,EAAsBC,UAAU,GAE7CC,EAAAA,WAAgB,WACTJ,GAASN,EAAaM,KACzBK,EAAAA,EAAAA,UAAS,IAEZ,GAAE,CAACL,IAEJ,IAAMM,GACJ,QAAC,KAAD,CAAQC,GAAG,KAAX,UACE,QAAC,KAAD,CAAkBC,iBAAe,EAACC,MAAM,eAqD5C,OAAKT,GAASN,EAAaM,IAIpB,SArDgB,SAAC,GAA4B,IAA3BA,EAA0B,EAA1BA,KACvB,EAA+BN,EAAaM,GAArCU,EAAP,EAAOA,OAAQC,EAAf,EAAeA,aAERC,GAAkBC,EAAAA,EAAAA,kBAAlBD,eAEPR,EAAAA,WAAgB,WACd,KAAMJ,KAAQN,GAAe,CAC3B,IAAMoB,EAAUC,OAAOC,KAAKtB,GAAcuB,MACxC,SAAAjB,GAAI,aAAI,UAAAN,EAAaM,UAAb,eAAoBU,UAAWA,CAAnC,IAGFI,GAEFT,EAAAA,EAAAA,UAAS,MAAMS,IAGfT,EAAAA,EAAAA,UAAS,IAEZ,CACF,GAAE,CAACX,IAEJ,IC3CFwB,EACAC,EAEA,EAAOvB,EAAOwB,EDwCLC,GAAaC,EAAAA,EAAAA,oBAAbD,UAIDE,EAAWF,EACbA,EAAUJ,MAAK,SAAAO,GAAC,OAAIA,EAAEC,OAASd,CAAf,IAChB,KAEUe,GCnDhBR,GDmD6C,iBAAC,kFACtCK,EADsC,gCAG3BX,EAAeD,GAHY,mFClD9CQ,EDuDK,CAACI,GCrDN,EAA0BnB,EAAAA,SAAgC,CACxDuB,OAAQ,OACRC,MAAO,KACPC,MAAO,OAHFjC,EAAP,KAAcwB,EAAd,KAMAhB,EAAAA,WAAgB,WACdc,IACGY,MAAK,SAAAF,GAAK,OAAIR,EAAS,CAACO,OAAQ,YAAaC,MAAAA,EAAOC,MAAO,MAAjD,IACVE,OAAM,SAAAF,GAAK,OAAIT,EAAS,CAACO,OAAQ,WAAYC,MAAO,KAAMC,MAAAA,GAA/C,GACf,GAAEV,GAOIvB,GD+BEgC,MAOP,OAAKF,GAKH,QAACA,EAAD,iBACOjC,EADP,CAEEuC,YAAW,iBAAMvC,EAAMuC,YAAZ,CAAyBC,WAAYvB,IAChDwB,KAAI,iBAAMzC,EAAMyC,KAAZ,CAAkBC,SAAU,UAP3B7B,CAUV,GAMM,CAAgBN,KAAMA,IAHpBM,CAIV,IEtED,EAZU,WACR,MAAsB,oBAAXP,QAEP,QAAC,EAAAqC,OAAD,CAAQC,SAAS,EAAjB,UACE,QAAC,EAAD,CAASrC,KAAK,SAKb,IACR,C","sources":["webpack://my-gatsby-site/./node_modules/@jaenjs/jaen/src/internal-plugins/pages/internal/services/routing/pages/dynamic.tsx","webpack://my-gatsby-site/./node_modules/@jaenjs/jaen/src/utils/hooks/usePromiseEffect.tsx","webpack://my-gatsby-site/./node_modules/@jaenjs/jaen/src/internal-plugins/pages/internal/services/routing/pages/_.tsx"],"sourcesContent":["import {Center, CircularProgress} from '@chakra-ui/react'\nimport {RouteComponentProps} from '@reach/router'\nimport {navigate, PageProps} from 'gatsby'\nimport * as React from 'react'\nimport {usePromiseEffect} from '../../../../../../utils/hooks/usePromiseEffect'\nimport {useAppSelector, withRedux} from '../../../redux'\nimport {useJaenTemplates, useSiteContext} from '../../../services/site'\n\nconst Dynamic = (props: RouteComponentProps & Partial<PageProps>) => {\n  const dynamicPaths = useAppSelector(\n    state => state.internal.routing.dynamicPaths\n  )\n\n  if (typeof window === 'undefined') {\n    return <>dynamic</>\n  }\n\n  const path = props.location?.hash?.substring(1)\n\n  React.useEffect(() => {\n    if (!path || !dynamicPaths[path]) {\n      navigate('/')\n    }\n  }, [path])\n\n  const loadingComponent = (\n    <Center my=\"24\">\n      <CircularProgress isIndeterminate color=\"teal.300\" />\n    </Center>\n  )\n\n  const TemplateLoader = ({path}: {path: string}) => {\n    const {pageId, templateName} = dynamicPaths[path]\n\n    const {templateLoader} = useSiteContext()\n\n    React.useEffect(() => {\n      if (!(path in dynamicPaths)) {\n        const newPath = Object.keys(dynamicPaths).find(\n          path => dynamicPaths[path]?.pageId === pageId\n        )\n\n        if (newPath) {\n          // Page has been moved, update to the new path\n          navigate(`/_#${newPath}`)\n        } else {\n          // Page has been deleted, redirect to the parent page\n          navigate('/')\n        }\n      }\n    }, [dynamicPaths])\n\n    const {templates} = useJaenTemplates()\n\n    // We need to wait for the template to be loaded before we can render the page,\n    // so template null means the template is not loaded yet\n    const template = templates\n      ? templates.find(t => t.name === templateName)\n      : null\n\n    const {value: Component} = usePromiseEffect(async () => {\n      if (template) {\n        // TODO: Remove this hack to ignore incorrect template names\n        return await templateLoader(templateName)\n      }\n    }, [template])\n\n    if (!Component) {\n      return loadingComponent\n    }\n\n    return (\n      <Component\n        {...(props as any)}\n        pageContext={{...props.pageContext, jaenPageId: pageId}}\n        data={{...props.data, jaenPage: null}}\n      />\n    )\n  }\n\n  if (!path || !dynamicPaths[path]) {\n    return loadingComponent\n  }\n\n  return <TemplateLoader path={path} />\n}\n\nexport default withRedux(Dynamic)\n","import * as React from 'react'\nimport {DependencyList} from 'react'\n\ntype PromiseState<T> =\n  | {status: 'idle' | 'pending'; value: null; error: null}\n  | {status: 'fulfilled'; value: T; error: null}\n  | {status: 'rejected'; value: null; error: Error}\n\nexport function usePromiseEffect<T>(\n  effect: () => Promise<T>,\n  deps: DependencyList\n) {\n  const [state, setState] = React.useState<PromiseState<T>>({\n    status: 'idle',\n    value: null,\n    error: null\n  })\n\n  React.useEffect(() => {\n    effect()\n      .then(value => setState({status: 'fulfilled', value, error: null}))\n      .catch(error => setState({status: 'rejected', value: null, error}))\n  }, deps)\n\n  // chose the shape you prefer for the return type,\n  // here are some examples:\n  // return [state.value, state.status === 'pending', state.error]\n  // return [state.value, state.status, state.error]\n\n  return state\n}\n","import {Router} from '@reach/router'\nimport Dynamic from './dynamic'\n\nconst _ = () => {\n  if (typeof window !== 'undefined') {\n    return (\n      <Router primary={false}>\n        <Dynamic path=\"/_\" />\n      </Router>\n    )\n  }\n\n  return null\n}\n\nexport default _\n"],"names":["withRedux","props","dynamicPaths","useAppSelector","state","internal","routing","window","path","location","hash","substring","React","navigate","loadingComponent","my","isIndeterminate","color","pageId","templateName","templateLoader","useSiteContext","newPath","Object","keys","find","effect","deps","setState","templates","useJaenTemplates","template","t","name","Component","status","value","error","then","catch","pageContext","jaenPageId","data","jaenPage","Router","primary"],"sourceRoot":""}