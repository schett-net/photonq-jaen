{"version":3,"file":"component---src-pages-profile-tsx-ecb299bcced57ccebbc0.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/components/Profile/ProfileContentContainer.tsx","webpack://my-gatsby-site/./src/components/Profile/ProfileSection.tsx","webpack://my-gatsby-site/./src/components/Profile/ProfileSectionHeader.tsx","webpack://my-gatsby-site/./src/components/Profile/Sections/ProfileDetailSection.tsx","webpack://my-gatsby-site/./src/pages/profile.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport clsx from \"clsx\";\n\ninterface ProfileContentContainerProps {\n  children: ReactNode;\n  withSpaceBetween?: boolean;\n}\n\nexport default function ProfileContentContainer({\n  children,\n  withSpaceBetween,\n}: ProfileContentContainerProps) {\n  return (\n    <div\n      className={clsx(\"border p-6\", {\n        \"space-y-5\": withSpaceBetween,\n      })}\n    >\n      {children}\n    </div>\n  );\n}\n","import React, { ReactNode } from \"react\";\nimport clsx from \"clsx\";\n\ninterface ProfileSectionProps {\n  children: ReactNode;\n  withBottomSpace?: boolean;\n}\n\nexport default function ProfileSection({\n  children,\n  withBottomSpace,\n}: ProfileSectionProps) {\n  return (\n    <div\n      className={clsx(\"pt-16 px-8 space-y-3\", {\n        \"pb-16\": withBottomSpace,\n      })}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button, Typography } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface ProfileSectionHeaderProps {\n  header: string;\n  withEditButton?: boolean;\n  onClick?: () => void;\n}\n\nexport default function ProfileSectionHeader({\n  header,\n  withEditButton,\n  onClick,\n}: ProfileSectionHeaderProps) {\n  const { t } = useTranslation();\n  return (\n    <div className={\"flex justify-between\"}>\n      <Typography variant={\"h5\"} component={\"h2\"} fontWeight={\"bold\"}>\n        {t(header)}\n      </Typography>\n      {withEditButton && <Button onClick={onClick}>{t(\"Edit\")}</Button>}\n    </div>\n  );\n}\n","import {Table, TableBody, TableCell, TableRow, TextField} from '@mui/material'\nimport React, {useContext, useState} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {User} from '../../../model/types/type.user'\nimport {AuthContext} from '../../../providers/AuthProvider'\nimport ProfileContentContainer from '../ProfileContentContainer'\nimport ProfileSection from '../ProfileSection'\nimport ProfileSectionHeader from '../ProfileSectionHeader'\n\nconst tableKeys: (keyof User)[] = ['firstName', 'lastName', 'email']\n\nexport default function ProfileDetailSection() {\n  const {t} = useTranslation()\n  const {value: user, setValue: setUser} = useContext(AuthContext)\n  const [isEditing] = useState(false)\n\n  if (!user) return null\n\n  const handleOnChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    key: keyof User\n  ) => {\n    setUser(prev => ({\n      ...prev!,\n      [key]: e.target.value!\n    }))\n  }\n\n  return (\n    <ProfileSection withBottomSpace>\n      <ProfileSectionHeader header={t('Details')} />\n      <ProfileContentContainer>\n        <Table>\n          <TableBody>\n            {Object.keys(user)\n              .filter(key => tableKeys.includes(key as keyof User))\n              .map((key, index) => (\n                <TableRow key={index}>\n                  <TableCell>\n                    {key === 'email' ? 'E-MAIL' : t(key).toUpperCase()}\n                  </TableCell>\n                  <TableCell>\n                    {isEditing ? (\n                      <TextField\n                        onChange={e => handleOnChange(e, key as keyof User)}\n                        value={user[key as keyof User]}\n                        variant={'standard'}\n                        fullWidth\n                      />\n                    ) : (\n                      user[key as keyof User]\n                    )}\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </ProfileContentContainer>\n    </ProfileSection>\n  )\n}\n","import {connectPage, Field} from '@jaenjs/jaen'\nimport {Container} from '@mui/system'\nimport {graphql, PageProps} from 'gatsby'\nimport React from 'react'\nimport ContentContainer from '../components/Layout/ContentContainer'\nimport NavbarPadding from '../components/Layout/NavbarPadding'\nimport PageLayout from '../components/Layout/PageLayout'\nimport SectionHeader from '../components/Layout/SectionHeader'\nimport ProfileDetailSection from '../components/Profile/Sections/ProfileDetailSection'\n\nexport function ProfilePage(props: PageProps) {\n  return (\n    <PageLayout pathname={props.path}>\n      <Container maxWidth=\"xl\">\n        <NavbarPadding />\n        <SectionHeader\n          header={\n            <Field.Text name=\"sectionHeader\" defaultValue={'My Profile'} />\n          }\n          withVerticalSpacing\n        />\n        <ContentContainer>\n          <ProfileDetailSection />\n        </ContentContainer>\n        <NavbarPadding />\n      </Container>\n    </PageLayout>\n  )\n}\n\nexport const query = graphql`\n  query ($jaenPageId: String!) {\n    ...JaenPageQuery\n  }\n`\n\nexport default connectPage(ProfilePage, {displayName: 'ProfilePage'})\n"],"names":["ProfileContentContainer","children","withSpaceBetween","_jsx","className","clsx","ProfileSection","withBottomSpace","ProfileSectionHeader","header","withEditButton","onClick","t","useTranslation","_jsxs","Typography","variant","component","fontWeight","Button","tableKeys","ProfileDetailSection","useContext","AuthContext","user","value","setUser","setValue","isEditing","useState","Table","TableBody","Object","keys","filter","key","includes","map","index","TableRow","TableCell","toUpperCase","TextField","onChange","e","prev","target","handleOnChange","fullWidth","ProfilePage","props","PageLayout","pathname","path","Container","maxWidth","NavbarPadding","SectionHeader","Field","name","defaultValue","withVerticalSpacing","ContentContainer","connectPage","displayName"],"sourceRoot":""}